<?php
/**
 * There are three parts to the Domain Mapping single-sign on;
 *
 * 1) the JavaScript include on the header for each blog accessed through domain
 *    mapping.
 * 2) Create an authentication token and then redirect back to the mapped
 *    domain.
 * 3) Validate the token and then login the user with that token.
 *
 * The authentication token has to be created on the WordPress Network domian
 * and **NOT** the mapped domain. This is because the process uses Third Party
 * cookies and therefore the user is logged in on the WordPress Network domain.
 * Therefore an authentication token can only be generated by the WordPress
 * Network domain.
 *
 * The token is then provided in a URL request to the mapped domain blog and
 * then the token is used to create an session cookie to login the user.
 */
defined( 'ABSPATH' ) or die();

class DM_SSO_Cookie {
    /**
     * Constructor.
     */
    public function __construct() {
        add_action( 'admin_post_nopriv_dark_matter_dmsso', array( $this, 'login_token' ) );
        add_action( 'admin_post_nopriv_dark_matter_dmcheck', array( $this, 'logout_token' ) );
        add_action( 'wp_head', array( $this, 'head_script' ) );
        add_action( 'plugins_loaded', array( $this, 'validate_token' ) );
    }

    public function login_token() {
    }

    public function logout_token() {
    }

    public function head_script() {

    }

    public function validate_token() {

    }

    /**
     * Return the Singleton Instance of the class.
     *
     * @return void
     */
    public static function instance() {
        static $instance = false;

        if ( ! $instance ) {
            $instance = new self();
        }

        return $instance;
    }
}